<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Color ID</title>
  </head>
  <body>
    <input type="file" name="imageFile" id="imageFile" accept="image/png, image/jpeg, image/jpg" />
    <form action="/api/upload" method="post">
      <textarea name="base64Image" id="base64Image" cols="30" rows="10"></textarea>
      <button type="submit">Run</button>
    </form>
    <img id="avatar" style="width: 25%" />
    <% if (color) { %>
    <h3><%= color.name %></h3>
    <h2><%= color.value %></h2>
    <button id="speech">Speech</button>
    <% } %>

    <script>
      const convertBase64 = (file) => {
        return new Promise((resolve, reject) => {
          const fileReader = new FileReader()
          fileReader.readAsDataURL(file)

          fileReader.onload = () => {
            resolve(fileReader.result)
          }

          fileReader.onerror = (error) => {
            reject(error)
          }
        })
      }

      const toBase64 = async (event) => {
        event.preventDefault()
        const file = event.target.files[0]
        const base64 = await convertBase64(file)
        document.getElementById("avatar").src = base64
        document.getElementById("base64Image").innerText = base64
      }

      document.getElementById("imageFile").addEventListener("change", (e) => {
        e.preventDefault()
        toBase64(e)
      })

      // speech
      let isSpeaking = true

      function textToSpeech(text) {
        let utterance = new SpeechSynthesisUtterance(text)
        speechSynthesis.speak(utterance)
      }

      document.getElementById("speech")?.addEventListener("click", () => {
        textToSpeech(`The color is ${document.querySelector("h3")?.innerText}`)
      })
    </script>
  </body>
</html>
